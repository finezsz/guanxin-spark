1 查看远程分支 
$ git branch -a   

2 查看本地分支 
$ git branch   

3 创建分支 
$ git branch test   

4 把分支推到远程分支  
$ git push origin test  

5 切换分支到test 
$ git checkout test   
   

M 表示cong 原来分支（上一次修改没有提交br-2.1.2.2）带过来的修改
6 删除本地分支  
git branch -d xxxxx 
 

7 查看本地和远程分支  -a。前面带*号的代表你当前工作目录所处的分支 
$ git remote  -v   

8 删除远程版本
git push origin :br-1.0.0  

9 删除远程分支  
git push origin :branch-name  

10 提交本地test分支作为远程的master分支
$git push origin test:master     
    
11 提交本地test分支作为远程的test分支
$git push origin test:test           

12 提交到本地
git  commit -m  “日志”   

13 提交到远程
git  push

14 列出tag
$ git tag # 在控制台打印出当前仓库的所有tag

15 创建轻量Tag
$ git tag mytag

16 切换到Tag
git checkout [tagname]

17 删除Tag
$ git tag -d mytag

18 给指定的commit打Tag
$ git tag -a mytag 9fbc3d0

19 Tag推送到服务器 
$ git push origin v0.1.2 #将v0.1.2 Tag提交到git服务器
$ git push origin --tags #将本地所有Tag一次性提交到git服务器

20 将hotfix分支合并到 master
$ git checkout master
$ git merge hotfix

21 克隆指定分支到本地
git clone -b feature_2017737 https://github.com/finezsz/guanxin-spark

22 从远程获取最新版本到本地，不会自动merge
git fetch

23 比较两个版本号码的src 文件夹的差异
git diff 版本号码1 版本号码2  src  
查看两个版本某个文件的差别 
git diff ffd98b291e0caa6c33575c1ef465eae661ce409:filename b8e7b00c02b95b320f14b625663fdecf2d63e74c:filename




