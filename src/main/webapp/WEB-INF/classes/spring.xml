<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.3.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 初始配置变量 -->
	<!-- <context:property-placeholder location="classpath:init.properties" 
		/> -->

	<!-- 扫描com.guanxin.spark包下的所有类实现annotation注入 -->
	<context:component-scan base-package="com.guanxin.spark">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="propertyConfigurer" class="com.guanxin.common.utils.PropUtils">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:config-dev.properties</value>
			</list>
		</property>
		<property name="fileEncoding">
			<value>UTF-8</value>
		</property>
	</bean>


	<bean id="parent_dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="initialSize" value="100" />
		<property name="maxActive" value="500" />
		<property name="minIdle" value="10" />
		<!-- 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。 -->
		<property name="maxWait" value="60000" />
		<!-- 有两个含义：1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明 -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<!-- 最小停留在Idle的时间 -->
		<property name="minEvictableIdleTimeMillis" value="60000" />
		<!-- 心跳保持 -->
		<property name="validationQuery" value="SELECT 1" />
		<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
		<property name="testWhileIdle" value="true" />
		<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 -->
		<property name="testOnBorrow" value="false" />
		<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnReturn" value="false" />
		<!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。 -->
		<property name="poolPreparedStatements" value="true" />
		<!--要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100 -->
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="200" />
		<!-- 下面配置 生产必须关闭 -->
		<!-- <property name="removeAbandoned" value="true" /> -->
		<!-- <property name="removeAbandonedTimeout" value="1800" /> -->
		<!-- <property name="logAbandoned" value="true" /> -->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
	</bean>

	<bean id="guanxinSparkDataSource" parent="parent_dataSource">
		<property name="url" value="jdbc:mysql://192.168.188.26:3306/guanxin_spark_dev?characterEncoding=utf-8&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;useSSL=false&amp;serverTimezone=GMT%2B8" />
		<property name="username" value="guanxin_dev" />
		<property name="password" value="toor1234" />

	</bean>

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="logSlowSql" value="true" />
	</bean>

	<bean id="guanxinSparkSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="guanxinSparkDataSource" />
		<property name="configLocation" value="classpath:MapperConfig.xml" />
		<!-- classpath后面的*必不可少，缺少的话后面的通配符不起作用。 **表示可以表示任意多级目录 ,*表示多个任意字符 ,以下两种方式都可以实现多个目录下mapper文件的扫描 -->
		<!-- <property name="mapperLocations" value="classpath*:com/guanxin.spark/**/sqlmap/*Mapper.xml" 
			/> -->
		<property name="mapperLocations">
			<array>
				<value>classpath:com/guanxin/spark/sqlmap/*.xml</value>
			</array>
		</property>

	</bean>
	<bean id="guanxinSparkSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0"
			ref="guanxinSparkSqlSessionFactory" />
	</bean>

	<bean class="com.guanxin.common.utils.SpringContextUtils" />

	<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="guanxinSparkDataSource" />
	</bean>
	<!--使用注释事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<import resource="dubbo-consumer.xml" />
	<import resource="spring-quartz.xml" />

</beans>